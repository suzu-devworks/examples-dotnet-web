<?xml version="1.0" encoding="utf-8" ?>
<!-- XSD manual extracted from package NLog.Schema: https://www.nuget.org/packages/NLog.Schema-->
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xsi:schemaLocation="NLog NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogFile="nlog-internal.log"
      internalLogLevel="Off" >

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <!-- the targets to write to -->
  <targets>
    <!-- write logs to console -->
    <target name="logconsole" xsi:type="ColoredConsole" layout="${MicrosoftConsoleLayout}"
      useDefaultRowHighlightingRules="true"
      >
      <highlight-row condition="level == LogLevel.Debug" foregroundColor="DarkCyan" />
      <highlight-word text="info" ignoreCase="true" wholeWords="true" foregroundColor="Green" />
      <highlight-row condition="level == LogLevel.Error" foregroundColor="DarkRed" />
      <highlight-row condition="level == LogLevel.Fatal"  backgroundColor="White" foregroundColor="Red"/>
    </target>

    <!-- write logs to file -->
    <target name="logfile" xsi:type="File" fileName="${basedir}/logs/examples_${shortdate}.log"
            layout="${date:format=yyyy-MM-ddTHH\:mm\:ss.fffK}|${level:padding=-5}|${pad:padding=-70:fixedLength=true:inner=${right:inner=${callsite}:length=70}}|${message} ${exception:format=tostring}"
            />

    <!-- write logs to rolling file -->
    <target name="rollinglogfile" xsi:type="File" fileName="${basedir}/logs/examples.log"
            archiveFileName="${basedir}/logs/examples.log.{#}"
            archiveNumbering="Rolling"
            archiveAboveSize="1048576"
            maxArchiveFiles="3"
            concurrentWrites="true"
            keepFileOpen="false"
            layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}" 
            />

    <!-- write logs to csv file -->
    <target name="csvlogfile" xsi:type="File" fileName="${basedir}/logs/examples_log.csv">
      <layout xsi:type="CsvLayout" delimiter="Tab" withHeader="false">
        <column name="time" layout="${longdate}" />
        <column name="level" layout="${pad:padding=-5:inner=${level:uppercase=true}}" />
        <column name="machinename" layout="${machinename}" />
        <column name="user" layout="${environment-user}" />
        <column name="processname" layout="${processname}" />
        <column name="processid" layout="${processid}" />
        <column name="threadid" layout="${threadid}" />
        <column name="callsite" layout="${callsite}" />
        <column name="message" layout="${message} ${exception:format=tostring}" />
      </layout>
    </target>

    <!-- write Error logs to file -->
    <target name="logerrorfile" xsi:type="File" fileName="${basedir}/logs/examples_${shortdate}_error.log"
            layout="${longdate}|${pad:padding=-5:inner=${level:uppercase=true}}|${callsite}|${message} ${exception:format=tostring}${newline}${stacktrace:format=Raw:topFrames=8:separator=&#010;}"
            />

  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--All logs, including from Microsoft-->
    <logger name="*" minlevel="Trace" writeTo="rollinglogfile" />

    <!--Output hosting lifetime messages to console target for faster startup detection -->
    <logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="logfile,logconsole" final="true" />
    <logger name="Microsoft.AspNetCore.Hosting.Diagnostics" minlevel="Info" writeTo="logfile,logconsole" final="true" />

    <!--Output EntityFrameworkCore SQL to logfile -->
    <logger name="Microsoft.EntityFrameworkCore.*" minlevel="Info" writeTo="logfile" final="true" />

    <!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <logger name="System.Net.Http.*" maxlevel="Info" final="true" />
    
    <logger name="*" minlevel="Info" writeTo="logfile,logconsole" />
  </rules>

</nlog>
